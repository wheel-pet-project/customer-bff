/*
 * Customer BFF
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using OpenApiContractV1.Attributes;
using OpenApiContractV1.Models;

namespace OpenApiContractV1.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class IdentityApiController : ControllerBase
    { 
        /// <summary>
        /// Аутентификация аккаунта
        /// </summary>
        /// <param name="authenticateRequest"></param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        /// <response code="404">Аккаунт с таким идентификатором не найден</response>
        [HttpPost]
        [Route("/identity/authenticate")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("Authenticate")]
        [SwaggerResponse(statusCode: 200, type: typeof(AuthenticateResponse), description: "Успешная операция")]
        public abstract Task<IActionResult> Authenticate([FromBody]AuthenticateRequest authenticateRequest);

        /// <summary>
        /// Подтверждение email аккаунта
        /// </summary>
        /// <param name="accountId">Идентификатор аккаунта</param>
        /// <param name="confirmationToken">Токен подтверждения</param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        /// <response code="404">Токен подтверждения не найден</response>
        [HttpPost]
        [Route("/identity/{accountId}/confirmation-token/{confirmationToken}/confirm")]
        [ValidateModelState]
        [SwaggerOperation("ConfirmAccountEmail")]
        public abstract Task<IActionResult> ConfirmAccountEmail([FromRoute (Name = "accountId")][Required]Guid accountId, [FromRoute (Name = "confirmationToken")][Required]string confirmationToken);

        /// <summary>
        /// Создание аккаунта
        /// </summary>
        /// <param name="createRequest"></param>
        /// <response code="201">Аккаунт успешно создан</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpPost]
        [Route("/identity/account/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateAccount")]
        [SwaggerResponse(statusCode: 201, type: typeof(CreateResponse), description: "Аккаунт успешно создан")]
        public abstract Task<IActionResult> CreateAccount([FromBody]CreateRequest createRequest);

        /// <summary>
        /// Восстановление пароля
        /// </summary>
        /// <param name="accountId">Идентификатор аккаунта</param>
        /// <param name="recoverPasswordRequest"></param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        /// <response code="404">Аккаунт с таким идентификатором не найден</response>
        [HttpPost]
        [Route("/identity/account/{accountId}/recover-password")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("RecoverPassword")]
        public abstract Task<IActionResult> RecoverPassword([FromRoute (Name = "accountId")][Required]string accountId, [FromBody]RecoverPasswordRequest recoverPasswordRequest);

        /// <summary>
        /// Обновление токена доступа
        /// </summary>
        /// <param name="refreshAccessTokenRequest"></param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        /// <response code="404">Refresh token с таким идентификатором не найден</response>
        [HttpPost]
        [Route("/identity/refresh-access-token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("RefreshAccessToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(RefreshAccessTokenResponse), description: "Успешная операция")]
        public abstract Task<IActionResult> RefreshAccessToken([FromBody]RefreshAccessTokenRequest refreshAccessTokenRequest);

        /// <summary>
        /// Обновление пароля
        /// </summary>
        /// <param name="accountId">Идентификатор аккаунта</param>
        /// <param name="updatePasswordRequest"></param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        /// <response code="404">Аккаунт с таким идентификатором не найден</response>
        [HttpPost]
        [Route("/identity/account/{accountId}/update-password")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdatePassword")]
        public abstract Task<IActionResult> UpdatePassword([FromRoute (Name = "accountId")][Required]string accountId, [FromBody]UpdatePasswordRequest updatePasswordRequest);
    }
}
