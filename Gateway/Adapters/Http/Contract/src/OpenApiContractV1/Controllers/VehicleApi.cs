/*
 * Customer BFF
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using OpenApiContractV1.Attributes;
using OpenApiContractV1.Models;

namespace OpenApiContractV1.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class VehicleApiController : ControllerBase
    { 
        /// <summary>
        /// Получение автомобиля по идентификатору
        /// </summary>
        /// <param name="vehicleId">Идентификатор автомобиля</param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpGet]
        [Route("/vehicle/{vehicleId}")]
        [ValidateModelState]
        [SwaggerOperation("GetVehicleById")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetVehicleByIdResponse), description: "Успешная операция")]
        public abstract Task<IActionResult> GetVehicleById([FromRoute (Name = "vehicleId")][Required]string vehicleId);

        /// <summary>
        /// Получение автомобилей в заданном квадрате
        /// </summary>
        /// <param name="status">Статус для фильтрации автомобилей</param>
        /// <param name="upperLeftLocation">Верхняя левая координата квадрата</param>
        /// <param name="lowerRightLocation">Нижняя правая координата квадрата</param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpGet]
        [Route("/vehicle/get-in-square")]
        [ValidateModelState]
        [SwaggerOperation("GetVehiclesInSquare")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetVehiclesInSquareResponse), description: "Успешная операция")]
        public abstract Task<IActionResult> GetVehiclesInSquare([FromQuery (Name = "status")][Required()]Status status, [FromQuery (Name = "upper-left-location")][Required()]Location upperLeftLocation, [FromQuery (Name = "lower-right-location")][Required()]Location lowerRightLocation);
    }
}
