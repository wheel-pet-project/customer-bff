/*
 * Customer BFF
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using OpenApiContractV1.Attributes;
using OpenApiContractV1.Models;

namespace OpenApiContractV1.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class RentApiController : ControllerBase
    { 
        /// <summary>
        /// Завершить аренду
        /// </summary>
        /// <param name="rentId">Идентификатор аренды</param>
        /// <response code="200">Успешный ответ</response>
        /// <response code="404">Аренда с таким идентификатором не существует</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpPost]
        [Route("/rent/{rentId}/complete")]
        [ValidateModelState]
        [SwaggerOperation("CompleteRent")]
        [SwaggerResponse(statusCode: 200, type: typeof(CompleteRentResponse), description: "Успешный ответ")]
        public abstract Task<IActionResult> CompleteRent([FromRoute (Name = "rentId")][Required]Guid rentId);

        /// <summary>
        /// Получить все текущие аренды
        /// </summary>
        /// <param name="rentId">Идентификатор аренды</param>
        /// <response code="200">Успешный ответ</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpGet]
        [Route("/rent/{rentId}/get-current-amount")]
        [ValidateModelState]
        [SwaggerOperation("GetCurrentAmountForRent")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetCurrentAmountRentResponse), description: "Успешный ответ")]
        public abstract Task<IActionResult> GetCurrentAmountForRent([FromRoute (Name = "rentId")][Required]Guid rentId);

        /// <summary>
        /// Начать аренду
        /// </summary>
        /// <param name="startRentRequest"></param>
        /// <response code="200">Успешный ответ</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpPost]
        [Route("/rent/start")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("StartRent")]
        [SwaggerResponse(statusCode: 200, type: typeof(StartRentResponse), description: "Успешный ответ")]
        public abstract Task<IActionResult> StartRent([FromBody]StartRentRequest startRentRequest);
    }
}
