/*
 * Customer BFF
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using OpenApiContractV1.Attributes;
using OpenApiContractV1.Models;

namespace OpenApiContractV1.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class DrivingLicenseApiController : ControllerBase
    { 
        /// <summary>
        /// Получение водительского удостоверения по идентификатору
        /// </summary>
        /// <param name="licenseId">Идентификатор водительского удостоверения</param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpGet]
        [Route("/driving-license/{licenseId}")]
        [ValidateModelState]
        [SwaggerOperation("GetDrivingLicenseById")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetLicenseByIdResponse), description: "Успешная операция")]
        public abstract Task<IActionResult> GetDrivingLicenseById([FromRoute (Name = "licenseId")][Required]Guid licenseId);

        /// <summary>
        /// Загрузка водительского удостоверения
        /// </summary>
        /// <param name="uploadLicenseRequest"></param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpPost]
        [Route("/driving-license/upload")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UploadDrivingLicense")]
        [SwaggerResponse(statusCode: 200, type: typeof(UploadLicenseResponse), description: "Успешная операция")]
        public abstract Task<IActionResult> UploadDrivingLicense([FromBody]UploadLicenseRequest uploadLicenseRequest);

        /// <summary>
        /// Загрузка фотографий водительского удостоверения
        /// </summary>
        /// <param name="licenseId">Идентификатор аренды</param>
        /// <param name="uploadPhotosRequest"></param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpPost]
        [Route("/driving-license/{licenseId}/upload-photos")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UploadDrivingLicensePhotos")]
        public abstract Task<IActionResult> UploadDrivingLicensePhotos([FromRoute (Name = "licenseId")][Required]Guid licenseId, [FromBody]UploadPhotosRequest uploadPhotosRequest);
    }
}
