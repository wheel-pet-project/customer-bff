/*
 * Customer BFF
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using OpenApiContractV1.Attributes;
using OpenApiContractV1.Models;

namespace OpenApiContractV1.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class ModelApiController : ControllerBase
    { 
        /// <summary>
        /// Получение всех моделей автомобилей
        /// </summary>
        /// <param name="page">Номер страницы</param>
        /// <param name="pageSize">Количество элементов на странице</param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpGet]
        [Route("/model/{page}/{pageSize}")]
        [ValidateModelState]
        [SwaggerOperation("GetAllModels")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetAllModelsResponse), description: "Успешная операция")]
        public abstract Task<IActionResult> GetAllModels([FromRoute (Name = "page")][Required]int page, [FromRoute (Name = "pageSize")][Required]int pageSize);

        /// <summary>
        /// Получение модели автомобиля по идентификатору
        /// </summary>
        /// <param name="modelId">Идентификатор модели автомобиля</param>
        /// <response code="200">Успешная операция</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpGet]
        [Route("/model/{modelId}")]
        [ValidateModelState]
        [SwaggerOperation("GetModelById")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetModelByIdResponse), description: "Успешная операция")]
        public abstract Task<IActionResult> GetModelById([FromRoute (Name = "modelId")][Required]string modelId);
    }
}
