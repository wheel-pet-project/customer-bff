/*
 * Customer BFF
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using OpenApiContractV1.Converters;

namespace OpenApiContractV1.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GetModelByIdResponse : IEquatable<GetModelByIdResponse>
    {
        /// <summary>
        /// Gets or Sets ModelId
        /// </summary>
        [DataMember(Name="model_id", EmitDefaultValue=false)]
        public string ModelId { get; set; }

        /// <summary>
        /// Gets or Sets Brand
        /// </summary>
        [DataMember(Name="brand", EmitDefaultValue=false)]
        public string Brand { get; set; }

        /// <summary>
        /// Gets or Sets CarModelId
        /// </summary>
        [DataMember(Name="carModelId", EmitDefaultValue=false)]
        public string CarModelId { get; set; }

        /// <summary>
        /// Gets or Sets Category
        /// </summary>
        [DataMember(Name="category", EmitDefaultValue=false)]
        public string Category { get; set; }

        /// <summary>
        /// Gets or Sets PricePerMinute
        /// </summary>
        [DataMember(Name="pricePerMinute", EmitDefaultValue=true)]
        public decimal PricePerMinute { get; set; }

        /// <summary>
        /// Gets or Sets PricePerHour
        /// </summary>
        [DataMember(Name="pricePerHour", EmitDefaultValue=true)]
        public decimal PricePerHour { get; set; }

        /// <summary>
        /// Gets or Sets PricePerDay
        /// </summary>
        [DataMember(Name="price_per_day", EmitDefaultValue=true)]
        public decimal PricePerDay { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetModelByIdResponse {\n");
            sb.Append("  ModelId: ").Append(ModelId).Append("\n");
            sb.Append("  Brand: ").Append(Brand).Append("\n");
            sb.Append("  CarModelId: ").Append(CarModelId).Append("\n");
            sb.Append("  Category: ").Append(Category).Append("\n");
            sb.Append("  PricePerMinute: ").Append(PricePerMinute).Append("\n");
            sb.Append("  PricePerHour: ").Append(PricePerHour).Append("\n");
            sb.Append("  PricePerDay: ").Append(PricePerDay).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GetModelByIdResponse)obj);
        }

        /// <summary>
        /// Returns true if GetModelByIdResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of GetModelByIdResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetModelByIdResponse other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ModelId == other.ModelId ||
                    ModelId != null &&
                    ModelId.Equals(other.ModelId)
                ) && 
                (
                    Brand == other.Brand ||
                    Brand != null &&
                    Brand.Equals(other.Brand)
                ) && 
                (
                    CarModelId == other.CarModelId ||
                    CarModelId != null &&
                    CarModelId.Equals(other.CarModelId)
                ) && 
                (
                    Category == other.Category ||
                    Category != null &&
                    Category.Equals(other.Category)
                ) && 
                (
                    PricePerMinute == other.PricePerMinute ||
                    
                    PricePerMinute.Equals(other.PricePerMinute)
                ) && 
                (
                    PricePerHour == other.PricePerHour ||
                    
                    PricePerHour.Equals(other.PricePerHour)
                ) && 
                (
                    PricePerDay == other.PricePerDay ||
                    
                    PricePerDay.Equals(other.PricePerDay)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ModelId != null)
                    hashCode = hashCode * 59 + ModelId.GetHashCode();
                    if (Brand != null)
                    hashCode = hashCode * 59 + Brand.GetHashCode();
                    if (CarModelId != null)
                    hashCode = hashCode * 59 + CarModelId.GetHashCode();
                    if (Category != null)
                    hashCode = hashCode * 59 + Category.GetHashCode();
                    
                    hashCode = hashCode * 59 + PricePerMinute.GetHashCode();
                    
                    hashCode = hashCode * 59 + PricePerHour.GetHashCode();
                    
                    hashCode = hashCode * 59 + PricePerDay.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GetModelByIdResponse left, GetModelByIdResponse right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GetModelByIdResponse left, GetModelByIdResponse right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
